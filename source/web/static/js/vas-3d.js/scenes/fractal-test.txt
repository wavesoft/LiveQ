
define(["three", "three-extras"],

	function(THREE, THREEx) {

		var Scene = {};

		var s = 400, h = 200, f0r = 80, f1r = 35;

		Scene.config = {

			// Anchor points in the animation
			p: {
				p1:  [ -3*s, 		 0 		],
				p2:  [ -2*s, 		 0 		],
				p3:  [ -2*s+f0r/2, 	 f0r/2 	],
				p4:  [ -2*s+f0r/2, 	-f0r/2 	],
				p5:  [ -s, 			 h/2 	],
				p6:  [ -s, 			-h/2 	],
				p7:  [ -s+f1r, 		-h/2 	],
				p8:  [ -s,			-h/2-f1r],
				p9:  [ -s/2,		-h 		],
				p10: [ 0, 			0 		],
			}

		};

		Scene.getDefinitions = function(Cfg) {
			return {
				"THREE": 				"three", 
				"THREEx": 				"three-extras",
				"FeymanDiagram": 		"vas-3d/util/feyman",
				"FluctuationSprite": 	"vas-3d/util/fluctuation-sprite"
			};
		}

		Scene.getMaps = function(Cfg,Def){ 
			return {
				'particles': {
					src: 'static/img/sprites.png',
					sprites: [4,4]
				},
				'fluc-glow': {
					src: "static/img/star-blue-purple-glow.png"
				},
				'fluc-particle': {
					src: "static/img/yellow_glow.png"
				}
			}
		};

		Scene.getMaterials = function(Cfg,Def,Map){ 
			return {
				'partA0': new Def.THREE.SpriteMaterial({
					map: Map.get('particles', 0, 0),
					color: 0xffffff,
					fog: true,
					transparent: true
				}),
				'partB0': new Def.THREE.SpriteMaterial({
					map: Map.get('particles', 1, 0),
					color: 0xffffff,
					fog: true,
					transparent: true
				}),
				'partB1': new Def.THREE.SpriteMaterial({
					map: Map.get('particles', 0, 1),
					color: 0xffffff,
					fog: true,
					transparent: true
				}),
				'partC0': new Def.THREE.SpriteMaterial({
					map: Map.get('particles', 1, 1),
					color: 0xffffff,
					fog: true,
					transparent: true
				}),
				'partC1': new Def.THREE.SpriteMaterial({
					map: Map.get('particles', 0, 0),
					color: 0xffffff,
					fog: true,
					transparent: true
				}),
			}
		};

		Scene.getGeometries = function(Cfg,Def){ 
			return {
			}
		};

		Scene.getObjects = function(Cfg,Def,Map,Mat,Geom){ 
			return {
				'grid': {
					create: function() {
						var grid = new THREE.GridHelper( 10000, 500 );
						grid.position.y = -400;
						return grid;
					}
				},
				'flucA0': {
					create: function() {
						var p = new Def.FluctuationSprite({
							radius: 50, mapGlow: Map.get('fluc-glow'), mapParticle: Map.get('fluc-particle')
						});
						p.position.z = -1;
						p.setParticleAR( 1, Math.PI/4, 0.25 );
						p.setParticleAR( 2, -Math.PI/4, 0.25 );
						return p;						
					},
					bind: {
						'flucA0.x': function(e,v) { e.position.setX(v); },
						'flucA0.y': function(e,v) { e.position.setY(v); },
						'flucA0.z': function(e,v) { e.position.setZ(v); },
						'flucA0.a': function(e,v) { e.material.opacity = v; },
					}
				},
				'flucB1': {
					create: function() {
						var p = new Def.FluctuationSprite({
							radius: 35, mapGlow: Map.get('fluc-glow'), mapParticle: Map.get('fluc-particle')
						});
						p.position.z = -1;
						p.setParticleAR( 1, Math.PI/4, 0.25 );
						p.setParticleAR( 2, -Math.PI/4, 0.25 );
						return p;						
					},
					bind: {
						'flucB1.x': function(e,v) { e.position.setX(v); },
						'flucB1.y': function(e,v) { e.position.setY(v); },
						'flucB1.z': function(e,v) { e.position.setZ(v); },
						'flucB1.a': function(e,v) { e.material.opacity = v; },
					}
				},
				'partA0': {
					create: function() {
						var p = new Def.THREE.Sprite( Mat.get('partA0') );
						p.scale.set(80,80,80);
						return p;
					},
					bind: {
						'partA0.x': function(e,v) { e.position.setX(v); },
						'partA0.y': function(e,v) { e.position.setY(v); },
						'partA0.z': function(e,v) { e.position.setZ(v); },
						'partA0.a': function(e,v) { e.material.opacity = v; }
					}
				},
				'partB0': {
					create: function() {
						var p = new Def.THREE.Sprite( Mat.get('partB0') );
						p.scale.set(50,50,50);
						return p;
					},
					bind: {
						'partB0.x': function(e,v) { e.position.setX(v); },
						'partB0.y': function(e,v) { e.position.setY(v); },
						'partB0.z': function(e,v) { e.position.setZ(v); },
						'partB0.a': function(e,v) { e.material.opacity = v; }
					}
				},
				'partB1': {
					create: function() {
						var p = new Def.THREE.Sprite( Mat.get('partB1') );
						p.scale.set(50,50,50);
						return p;
					},
					bind: {
						'partB1.x': function(e,v) { e.position.setX(v); },
						'partB1.y': function(e,v) { e.position.setY(v); },
						'partB1.z': function(e,v) { e.position.setZ(v); },
						'partB1.a': function(e,v) { e.material.opacity = v; }
					}
				},
				'partC0': {
					create: function() {
						var p = new Def.THREE.Sprite( Mat.get('partC0') );
						p.scale.set(30,30,30);
						return p;
					},
					bind: {
						'partC0.x': function(e,v) { e.position.setX(v); },
						'partC0.y': function(e,v) { e.position.setY(v); },
						'partC0.z': function(e,v) { e.position.setZ(v); },
						'partC0.a': function(e,v) { e.material.opacity = v; }
					}
				},				
				'partC1': {
					create: function() {
						var p = new Def.THREE.Sprite( Mat.get('partC1') );
						p.scale.set(30,30,30);
						return p;
					},
					bind: {
						'partC1.x': function(e,v) { e.position.setX(v); },
						'partC1.y': function(e,v) { e.position.setY(v); },
						'partC1.z': function(e,v) { e.position.setZ(v); },
						'partC1.a': function(e,v) { e.material.opacity = v; }
					}
				}
			}
		};

		Scene.getTimeline = function(Cfg) {
			return {

				// Defaults for all objects
				'defaults': {
					'partA0.a': 0,
					'partB0.a': 0,
					'partB1.a': 0,
					'partC0.a': 0,
					'partC1.a': 0,
					'flucA0.a': 1,
					'flucA1.a': 0,
					'cam.x': 0,
					'cam.y': 0,
					'cam.z': 1800,
				},

				'keyframes': [

					// Crossfade partA0 -> flucA0
					[
						{
							p: 0.0,
							v: {
								'partA0.a': 1,							
								'flucA0.a': 0,
								'flucA0.p': 50,
							}
						},
						{
							p: 0.5,
							v: {
								'partA0.a': 0,
								'flucA0.a': 1,
								'flucA0.p': 25,
							}
						},
						{
							p: 1.0,
							v: {
								'partA0.a': 0,							
								'flucA0.a': 1,
								'flucA0.p': 0,
							}
						},
						{
							p: 1.1,
							v: {
								'partA0.a': 0,							
								'flucA0.a': 0
							}
						}
					],

					// Crossfade partB0 & partB1
					[
						{
							p: 0.9,
							v: {
								'partB0.a': 1,
								'partB1.a': 1,
							}
						},
						{
							p: 1.0,
							v: {
								'partB0.a': 1,
								'partB1.a': 1,
							}
						}
					],

					// Position management
					[

						// [P0] Particle in the left-post position
						{
							p: 0.0,
							v: {
								'partA0.x': -s*3, // P0 -> [P1]
								'partA0.y': 0,

								'flucA0.x': -s*3, // [P0]
								'flucA0.y': 0,
								//'flucA0.s': 0.8,

								'cam.x': -s*3,
								'cam.y': 0,
								'cam.z': 1800,
							}

						},

						// [P1] Particle fades out, fluctuation appears
						{
							p: 1.0,
							v: {
								'partA0.x': -s*2, // [P1]
								'partA0.y': 0,
								'partA0.a': 0,

								'flucA0.x': -s*2, // [P1] -> P6
								'flucA0.y': 0,
								//'flucA0.s': 1,
								'flucA0.p': 0,

								'partB0.x': -s*2, // [P1] -> P3
								'partB0.y': -10,
								'partB0.a': 0,

								'fluc1.x': -s*2, // [P1] -> P2
								'fluc1.y': 10,
								'fluc1.a': 1,
								'fluc1.s': 0.8,

								'cam.x': -s*2,
								'cam.y': 0,
								'cam.z': 300,
							}
						},

						// [P6] Particles split
						{
							p: 2.0,
							v: {
								'flucA0.x': -s*2, // [P6]
								'flucA0.y': 0,
								'flucA0.a': 0,
								//'flucA0.s': 2,

								'partB0.x': -s,	// [P3]
								'partB0.y': h/2,
								'partB0.a': 1,

								'fluc1.x': -s,	// [P2] -> P8
								'fluc1.y': -h/2,
								'fluc1.a': 1,
								'fluc1.s': 1,

								'partB1.x': -s,	// [P2] -> P4
								'partB1.y': -h/2,
								'partB1.a': 0,

								'part3.x': -s,	// [P2] -> P5
								'part3.y': -h/2,
								'part3.a': 0,

								'cam.x': -s,
								'cam.y': -h/2,
								'cam.z': 200,
							}
						},

						// [P5] Second fluctiation goes aways
						{
							p: 2.5,
							v: {
								'flucA0.s': 0.000001,

								'fluc1.x': -s/2,	// [P8]
								'fluc1.y': -h*2/3,
								'fluc1.a': 0,
								'fluc1.s': 6,

								'partB1.x': -s/2,	// [P4]
								'partB1.y': -h,
								'partB1.a': 1,

								'part3.x': -s/2,	// [P5] -> P9
								'part3.y': -h/4,
								'part3.a': 1,

								'cam.x': -s/2,
								'cam.y': 0,
								'cam.z': 400,
							}
						},

						// [P9] Second fluctiation goes aways
						{
							p: 3.0,
							v: {
								'fluc1.s': 0.000001,

								'part3.x': 0,		// [P9]
								'part3.y': 0,
								'part3.a': 1,

								'cam.x': 0,
								'cam.z': 800,
							}
						},

					]

				]
			};

		}

		return Scene;

	}

);